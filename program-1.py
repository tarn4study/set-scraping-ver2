# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui-1.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service 
from webdriver_manager.chrome import ChromeDriverManager
import pandas as pd
import json


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 450)
        MainWindow.setMinimumSize(QtCore.QSize(600, 450))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.agroButton = QtWidgets.QRadioButton(self.frame)
        self.agroButton.setObjectName("agroButton")
        self.verticalLayout_2.addWidget(self.agroButton)
        self.conmatButton = QtWidgets.QRadioButton(self.frame)
        self.conmatButton.setObjectName("conmatButton")
        self.verticalLayout_2.addWidget(self.conmatButton)
        self.consumpButton = QtWidgets.QRadioButton(self.frame)
        self.consumpButton.setObjectName("consumpButton")
        self.verticalLayout_2.addWidget(self.consumpButton)
        self.fincialButton = QtWidgets.QRadioButton(self.frame)
        self.fincialButton.setObjectName("fincialButton")
        self.verticalLayout_2.addWidget(self.fincialButton)
        self.indusButton = QtWidgets.QRadioButton(self.frame)
        self.indusButton.setObjectName("indusButton")
        self.verticalLayout_2.addWidget(self.indusButton)
        self.resourcButton = QtWidgets.QRadioButton(self.frame)
        self.resourcButton.setObjectName("resourcButton")
        self.verticalLayout_2.addWidget(self.resourcButton)
        self.serviceButton = QtWidgets.QRadioButton(self.frame)
        self.serviceButton.setObjectName("serviceButton")
        self.verticalLayout_2.addWidget(self.serviceButton)
        self.techButton = QtWidgets.QRadioButton(self.frame)
        self.techButton.setObjectName("techButton")
        self.verticalLayout_2.addWidget(self.techButton)
        self.allButton = QtWidgets.QRadioButton(self.frame)
        self.allButton.setObjectName("allButton")
        self.verticalLayout_2.addWidget(self.allButton)
        self.verticalLayout.addWidget(self.frame)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_3 = QtWidgets.QFrame(self.frame_2)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_3)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.file_location = QtWidgets.QLabel(self.frame_3)
        self.file_location.setObjectName("file_location")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.file_location)
        self.label = QtWidgets.QLabel(self.frame_3)
        self.label.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";")
        self.label.setObjectName("label")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.verticalLayout_4.addLayout(self.formLayout)
        self.verticalLayout_3.addWidget(self.frame_3)
        self.location = QtWidgets.QPushButton(self.frame_2)
        self.location.setObjectName("location")
        self.verticalLayout_3.addWidget(self.location)
        self.exportButton = QtWidgets.QPushButton(self.frame_2)
        self.exportButton.setObjectName("exportButton")
        self.verticalLayout_3.addWidget(self.exportButton)
        self.verticalLayout.addWidget(self.frame_2)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.location.clicked.connect(self.choose_directory)
        self.exportButton.clicked.connect(self.export_to)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "โปรแกรมดึงข้อมูลหุ้น"))
        self.agroButton.setText(_translate("MainWindow", "AGRO"))
        self.conmatButton.setText(_translate("MainWindow", "CONMAT"))
        self.consumpButton.setText(_translate("MainWindow", "CONSUMP"))
        self.fincialButton.setText(_translate("MainWindow", "FINCIAL"))
        self.indusButton.setText(_translate("MainWindow", "INDUS"))
        self.resourcButton.setText(_translate("MainWindow", "RESOURC"))
        self.serviceButton.setText(_translate("MainWindow", "SERVICE"))
        self.techButton.setText(_translate("MainWindow", "TECH"))
        self.allButton.setText(_translate("MainWindow", "All stocks"))
        self.file_location.setText(_translate("MainWindow", "file location will be display here"))
        self.label.setText(_translate("MainWindow", "Export to:"))
        self.location.setText(_translate("MainWindow", "Choose File Location"))
        self.exportButton.setText(_translate("MainWindow", "Export"))

    def choose_directory(self):
        folderpath = QtWidgets.QFileDialog.getExistingDirectory(None, 'Select Folder')
        self.file_location.setText(folderpath)

    def export_to(self):
        driver = webdriver.Chrome(service = Service(ChromeDriverManager().install()))
        if self.agroButton.isChecked():
            target = symbol.agro
        elif self.conmatButton.isChecked():
            target = symbol.conmat
        elif self.consumpButton.isChecked():
            target = symbol.consump
        elif self.fincialButton.isChecked():
            target = symbol.fincial
        elif self.indusButton.isChecked():
            target = symbol.indus
        elif self.resourcButton.isChecked():
            target = symbol.resourc
        elif self.serviceButton.isChecked():
            target = symbol.service
        elif self.techButton.isChecked():
            target = symbol.tech
        elif self.allButton.isChecked():
            target = symbol.total
       
        for t in target:
            driver.get(target[t])

            name = driver.find_element(By.CSS_SELECTOR, "h1.symbol.text-white.mb-0.me-2")
            data_list = pd.read_html(driver.page_source)

            writer = pd.ExcelWriter(self.file_location.text()+r"/"+name.text+r".xlsx", engine="openpyxl")
            data_list[0].to_excel(writer, sheet_name='Sheet1', index=False)
            data_list[1].to_excel(writer, sheet_name='Sheet2', index=False)
            writer.close()

        driver.close()

def get_json():
    global agro, conmat, consump, fincial, indus, resourc, service, tech, total
    with open(r'D:\Project\web scraping\version2\web\AGRO.json') as json_file:
        agro = json.load(json_file)

    with open(r'D:\Project\web scraping\version2\web\CONMAT.json') as json_file:
        conmat = json.load(json_file)

    with open(r'D:\Project\web scraping\version2\web\CONSUMP.json') as json_file:
        consump = json.load(json_file)

    with open(r'D:\Project\web scraping\version2\web\FINCIAL.json') as json_file:
        fincial = json.load(json_file)

    with open(r'D:\Project\web scraping\version2\web\INDUS.json') as json_file:
        indus = json.load(json_file)

    with open(r'D:\Project\web scraping\version2\web\RESOURC.json') as json_file:
        resourc = json.load(json_file)

    with open(r'D:\Project\web scraping\version2\web\SERVICE.json') as json_file:
        service = json.load(json_file)

    with open(r'D:\Project\web scraping\version2\web\TECH.json') as json_file:
        tech = json.load(json_file)
    all_web = [agro, conmat, consump, fincial, indus, resourc, service, tech]
    total = {}
    for a in all_web:
        total.update(a)

class url:
    def __init__(self, agro, conmat, consump, fincial, indus, resourc, service, tech, total):
        self.agro = agro
        self.conmat = conmat
        self.consump = consump
        self.fincial = fincial
        self.indus = indus
        self.resourc = resourc
        self.service = service
        self.tech = tech
        self.total = total


if __name__ == "__main__":
    import sys
    get_json()
    symbol = url(agro, conmat, consump, fincial, indus, resourc, service, tech, total)
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
